/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <31 6 18 30 41 40 39 19 7 8 20 32 33 34 22 21 9 10>;
            flavor = "tap-preferred";
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <38 37 36 29 28 27 26 25 13 14 16 15 17 5 4 3 2 1>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W         &kp E                &kp R              &kp T              &kp Y             &kp U               &kp I                 &kp O         &kp P     &kp BSPC
&kp LCTRL  &kp A  &hml LCTRL S  &hml LEFT_COMMAND D  &hml LEFT_SHIFT F  &hml LEFT_ALT G    &hmr RIGHT_ALT H  &hmr RIGHT_SHIFT J  &hmr RIGHT_COMMAND K  &hmr RCTRL L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X         &kp C                &kp V              &kp B              &kp N             &kp M               &kp COMMA             &kp DOT       &kp FSLH  &kp ESC
                                &lt 3 ESCAPE         &lt 1 SPACE        &lt 5 TAB          &lt 6 ENTER       &lt 4 SPACE         &lt 4 BACKSPACE
            >;
        };

        nums_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |BTCLR|     | SPC |   | ENT |     | ALT |

            label = "Nums";
            bindings = <
&kp TAB     &kp N1      &kp N2      &kp N3            &kp N4          &kp N5          &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET  &kp BSPC
&bt BT_CLR  &kp ESCAPE  &kp LCTRL   &kp LEFT_COMMAND  &kp LEFT_SHIFT  &kp LEFT_ALT    &kp SEMI          &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL          &trans
&kp LSHFT   &kp ESCAPE  &kp ESCAPE  &kp ESCAPE        &kp ESCAPE      &kp ESCAPE      &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &trans
                                    &kp ESCAPE        &trans          &kp SPACE       &kp PIPE          &kp N0        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET    &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS    &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &bootloader  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET      &trans     &kp RALT
            >;
        };

        fun_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
                        &trans  &trans  &trans    &trans   &trans  &trans
            >;

            label = "Fun";
        };

        nav_layer {
            bindings = <
&trans  &trans          &trans          &kp CAPS      &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans        &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans     &trans    &trans  &trans  &trans
            >;

            label = "Nav";
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &mkp LCLK  &trans    &trans  &trans  &trans
            >;

            label = "Mouse";
        };

        bluetooth_layer {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &bootloader    &trans  &trans  &trans  &trans  &trans  &trans
                                    &bt BT_CLR    &trans        &trans         &trans  &trans  &trans
            >;

            label = "Bluetootlh";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bluetooth {
            if-layers = <5 1>;
            then-layer = <7>;
        };
    };
};
